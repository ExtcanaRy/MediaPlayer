name: Release

on:
  workflow_dispatch:
    inputs:
      solution:
        description: 'Build Solution'
        required: true
        default: 'RelWithDebInfo'
        type: string
      artifact:
        description: 'Upload to Artifact'
        required: false
        default: true
        type: boolean
      release:
        description: 'Generate a new Release'
        required: false
        default: true
        type: boolean
      pre_release:
        description: 'Generate a new Pre Release'
        required: false
        default: false
        type: boolean
      rel_title:
        description: 'Release Description Title'     
        required: false
        default: ''
        type: string
      rel_tag:
        description: 'Release Tag'     
        required: false
        default: ''
        type: string
      rel_desc_body:
        description: 'Release Description Body'     
        required: false
        default: ''
        type: string

jobs:
  release:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.0.0

      - name: Set release info
        id: rel_info
        run: |

          echo "build_time=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT

          echo "tag_name=v${{ inputs.rel_tag }}" >> $GITHUB_OUTPUT
          
          if [ -z "${{ inputs.rel_title }}" ]; then
            echo "title=v${{ inputs.rel_tag }}" >> $GITHUB_OUTPUT
          else
            echo "title=${{ inputs.rel_title }}" >> $GITHUB_OUTPUT
          fi

          if [ -z "${{ inputs.rel_desc_body }}" ]; then
            echo "desc_body=$(git log -1 --pretty=%B)" >> $GITHUB_OUTPUT
          else
            echo "desc_body=${{ inputs.rel_desc_body }}" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1
        with:
          msbuild-architecture: x64

      - name: Build Project
        run: |
          New-Item -ItemType directory -Path build
          cmake -S . -B build
          cmake --build build/ --config ${{ inputs.solution }} -j

      - name: Organize files
        run: |
          mkdir ./release/MediaPlayer/video
          cp ./build/${{ inputs.solution }}/MediaPlayer.dll ./release/
          cp ./build/${{ inputs.solution }}/MediaPlayer.pdb ./release/
          cp ./build/${{ inputs.solution }}/convert.exe ./release/MediaPlayer/video
          tree /F ./release/

      - name: Zip Release
        uses: TheDoctor0/zip-release@0.7.1
        with:
          filename: MediaPlayer_v${{ steps.rel_info.outputs.tag_name }}.zip
          path: .
          directory: release

      - name: Upload build files
        uses: actions/upload-artifact@v3.1.3
        if: inputs.artifact
        with:
          name: build
          path: ./build/${{ inputs.solution }}

      - name: Release
        uses: softprops/action-gh-release@v0.1.15
        if: inputs.release
        with:
          tag_name: ${{ steps.rel_info.outputs.tag_name }}
          name: ${{ steps.rel_info.outputs.title }}
          prerelease: ${{ inputs.pre_release }}
          body: ${{ steps.rel_info.outputs.desc_body }}
          files: |
            ./release/MediaPlayer_v${{ steps.rel_info.outputs.tag_name }}.zip

      - name: Checkout tooth
        uses: actions/checkout@v4.0.0
        if: inputs.release
        with:
          path: 'tooth'
          repository: 'ExtcanaRy/MediaPlayer-tooth'
          fetch-depth: 0

      - name: Update tooth files
        if: inputs.release
        run: |
          cp ./release/MediaPlayer.dll ./tooth/
          cp ./release/MediaPlayer.pdb ./tooth/
          cp ./release/MediaPlayer/video/convert.exe ./tooth/
          $out = Get-Content -Path "tooth/tooth.json" | ForEach-Object { $_ -replace '"version": ".*"', '"version": "${{ steps.rel_info.outputs.tag_name }}"' }
          $out | Out-File -FilePath "tooth/tooth.json"

      - uses: actions/checkout@v4
        if: inputs.release
      - run: |
          cd tooth
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "v${{ steps.rel_info.outputs.tag_name }}"
          git push

      - name: Release tooth
        uses: softprops/action-gh-release@v0.1.15
        if: inputs.release
        with:
          repository: 'ExtcanaRy/MediaPlayer-tooth'
          tag_name: v${{ steps.rel_info.outputs.tag_name }}
          name: v${{ steps.rel_info.outputs.tag_name }}
          body: v${{ steps.rel_info.outputs.tag_name }}
