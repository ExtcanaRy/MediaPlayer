name: Release

on:
  workflow_dispatch:
    inputs:
      solution:
        description: 'Build Solution'
        required: true
        default: 'RelWithDebInfo'
        type: string
      artifact:
        description: 'Upload to Artifact'
        required: false
        default: true
        type: boolean
      release:
        description: 'Generate a new Release'
        required: false
        default: true
        type: boolean
      pre_release:
        description: 'Generate a new Pre Release'
        required: false
        default: false
        type: boolean
      rel_title:
        description: 'Release Description Title'     
        required: false
        default: ''
        type: string
      rel_tag:
        description: 'Release Tag'     
        required: false
        default: ''
        type: string
      rel_desc_body:
        description: 'Release Description Body'     
        required: false
        default: ''
        type: string

jobs:
  build-linux:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.0.0

      - name: Install Packages
        run: |
          sudo apt update
          sudo apt install -y cmake libc++1-12 libc++abi-12-dev libc++-12-dev libc++abi1-12 clang-12

      - name: Build
        run: mkdir -p build && cd build && cmake -DCMAKE_C_COMPILER=clang-12 -DCMAKE_CXX_COMPILER=clang++-12 -DCMAKE_INSTALL_PREFIX=../bds/ .. && make && make install && cd ..

      - name: Upload build files
        uses: actions/upload-artifact@v4.3.1
        with:
          name: libMediaPlayer.so
          path: |
            ./build/libMediaPlayer.so


  release:
    needs: build-linux
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.0.0

      - name: Set release info
        id: rel_info
        run: |

          echo "build_time=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT

          echo "tag_name=${{ inputs.rel_tag }}" >> $GITHUB_OUTPUT
          
          if [ -z "${{ inputs.rel_title }}" ]; then
            echo "title=v${{ inputs.rel_tag }}" >> $GITHUB_OUTPUT
          else
            echo "title=${{ inputs.rel_title }}" >> $GITHUB_OUTPUT
          fi

          if [ -z "${{ inputs.rel_desc_body }}" ]; then
            echo "desc_body=$(git log -1 --pretty=%B)" >> $GITHUB_OUTPUT
          else
            echo "desc_body=${{ inputs.rel_desc_body }}" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2
        with:
          msbuild-architecture: x64

      - name: Build Project
        run: |
          $out = Get-Content -Path "CMakeLists.txt" | ForEach-Object { $_ -replace '-DPLUGIN_VERSION_UNDEFINED', '-DPLUGIN_VERSION="${{ steps.rel_info.outputs.tag_name }}"' }
          $out | Out-File -Encoding utf8 -FilePath "CMakeLists.txt"
          New-Item -ItemType directory -Path build
          cmake -S . -B build
          cmake --build build/ --config ${{ inputs.solution }} -j

      - name: Download linux build
        uses: actions/download-artifact@v3
        with:
          name: libMediaPlayer.so

      - name: Organize files
        run: |
          mkdir ./release/MediaPlayer/video
          cp ./libMediaPlayer.so ./release/
          cp ./build/${{ inputs.solution }}/MediaPlayer.dll ./release/
          cp ./build/${{ inputs.solution }}/MediaPlayer.pdb ./release/
          cp ./build/${{ inputs.solution }}/convert.exe ./release/MediaPlayer/video
          tree /F ./release/

      - name: Zip Release
        uses: TheDoctor0/zip-release@0.7.1
        with:
          filename: MediaPlayer_v${{ steps.rel_info.outputs.tag_name }}.zip
          path: .
          directory: release

      - name: Upload build files
        uses: actions/upload-artifact@v4.3.1
        if: inputs.artifact
        with:
          name: artifact-win
          path: ./build/${{ inputs.solution }}

      - name: Release
        uses: softprops/action-gh-release@v0.1.15
        if: inputs.release
        with:
          tag_name: v${{ steps.rel_info.outputs.tag_name }}
          name: ${{ steps.rel_info.outputs.title }}
          prerelease: ${{ inputs.pre_release }}
          body: ${{ steps.rel_info.outputs.desc_body }}
          files: |
            ./release/MediaPlayer_v${{ steps.rel_info.outputs.tag_name }}.zip

      - name: Checkout tooth
        uses: actions/checkout@v4.0.0
        with:
          repository: ExtcanaRy/MediaPlayer-tooth
          path: tooth
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          persist-credentials: true

      - name: Update tooth files
        if: inputs.release
        run: |
          tree
          cd ./tooth/
          cp ../release/MediaPlayer.dll ./
          cp ../release/MediaPlayer.pdb ./
          cp ../release/MediaPlayer/video/convert.exe ./
          $out = Get-Content -Path "tooth.json" | ForEach-Object { $_ -replace '"version": ".*"', '"version": "${{ steps.rel_info.outputs.tag_name }}"' }
          $out | Out-File -FilePath "tooth.json"
          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit -a -m "v${{ steps.rel_info.outputs.tag_name }}"

      - name: Push tooth
        uses: ad-m/github-push-action@master
        with:
          ssh: true
          directory: tooth
          repository: ExtcanaRy/MediaPlayer-tooth

      - name: Release tooth
        uses: softprops/action-gh-release@v0.1.15
        if: inputs.release
        with:
          repository: ExtcanaRy/MediaPlayer-tooth
          tag_name: v${{ steps.rel_info.outputs.tag_name }}
          name: v${{ steps.rel_info.outputs.tag_name }}
          body: v${{ steps.rel_info.outputs.tag_name }}
          token: ${{ secrets.PAT_KEY }}
